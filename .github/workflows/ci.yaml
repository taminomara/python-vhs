name: Test package
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
jobs:
  build:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build>=0.10 wheel>=0.40
      - run: |
          echo 'Output "_empty_vhs_tape.ascii"' > _empty_vhs_tape.tape
          echo 'Type "!"' >> _empty_vhs_tape.tape
      - name: Install VHS
        uses: charmbracelet/vhs-action@v1
        with:
          path: _empty_vhs_tape.tape
      - name: Build wheels
        run: |
          python build_wrapper.py build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*.whl
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    needs: [ build ]
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - 3.8
          - 3.11
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      - name: Install VHS wheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install --no-index --find-links dist/ --verbose vhs
      - name: Test package
        run: pytest --junit-xml=test-results.xml
      - name: Generate summary
        uses: pmeier/pytest-summary-gha@main
        if: always()
        with:
          path: test-results.xml

#  publish:
#    name: Publish to PyPi
#    runs-on: ubuntu-latest
#    needs: [ tests ]
#    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
#    steps:
#      - name: Checkout source
#        uses: actions/checkout@v3
#      - name: Set up python 3.8
#        uses: actions/setup-python@v4
#        with:
#          python-version: 3.8
#      - name: Install flit
#        run: |
#          pip install flit~=3.9
#      - name: Build and publish to test pypi
#        run: |
#          flit publish
#        env:
#          FLIT_USERNAME: __token__
#          FLIT_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
#          FLIT_INDEX_URL: https://test.pypi.org/legacy/
#      - name: Build and publish to pypi
#        run: |
#          flit publish
#        env:
#          FLIT_USERNAME: __token__
#          FLIT_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
