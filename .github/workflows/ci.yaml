name: Test package
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
jobs:

  test:
    name: Test package
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
        include:
          - os: windows-latest
            python-version: "3.11"
          - os: macos-latest
            python-version: "3.11"
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          python -m pip install '.[test]'
      - name: Check codestyle
        run: black --check .
      - run: |
          echo 'Type "true"' > _empty_vhs_tape.tape
      - name: Install VHS
        uses: charmbracelet/vhs-action@v1
        with:
          path: _empty_vhs_tape.tape
      - name: Test package
        run: pytest -vv --showlocals --tb=short --color=yes --junit-xml=test-results.xml
      - name: Generate summary
        uses: pmeier/pytest-summary-gha@main
        if: always()
        with:
          path: test-results.xml

  publish-to-pypi:
    name: Publish package to PyPi
    runs-on: ubuntu-latest
    needs:
     - test
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Set up python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install build
        run: |
          pip install build
      - name: Build project
        run: |
          python3 -m build .
      - name: Publish to test pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_PASSWORD }}
          repository-url: https://test.pypi.org/legacy/
      - name: Publish to pypi
        if: !contains(github.event.ref, '.dev')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
          repository-url: https://pypi.org/legacy/

  build-docs:
    name: Build docs
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          python -m pip install --editable '.[doc]'
      - uses: taminomara/sphinx-problem-matcher@main
      - name: Build docs
        env:
          SPHINXOPTS: "-j auto"
        run: |
          cd docs
          make html
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: html_output
          path: docs/build/html

  publish-docs-preview:
    name: Publish docs preview to GitHub Pages
    if: github.event_name == 'push' && !startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs:
      - build-docs
    concurrency:
      group: publish-docs-${{ github.ref }}
      cancel-in-progress: true
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: html_output
          path: docs/build/html
      - name: Publish HTML
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: docs/build/html
          umbrella-dir: pr-preview

  publish-docs:
    name: Publish docs to GitHub Pages
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs:
      - build-docs
    concurrency:
      group: publish-docs-${{ github.ref }}
      cancel-in-progress: true
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: html_output
          path: docs/build/html
      - name: Publish HTML
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs/build/html
          target-folder: .
          clean-exclude: pr-preview
          single-commit: true
