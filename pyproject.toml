[project]
name = "vhs"
authors = [{ name = "Tamika Nomara", email = "taminomara@gmail.com" }]
description = "Write terminal GIFs as code for integration testing and demoing your CLI tools, now with python"
dynamic = ["version"]
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Intended Audience :: Developers",
    "Typing :: Typed",
]
dependencies = ["PyGithub>=1.59,<2.9", "requests>=2.31,<2.33"]

[dependency-groups]
dev = [
    "pytest-cov==7.0.0",
    { include-group = "test" },
    { include-group = "lint" },
    { include-group = "doc" },
]
test = ["pyright==1.1.405", "pytest==8.4.2", "sybil==9.2.0", "html5lib~=1.1"]
lint = ["black==25.9.0", "isort==6.0.1", "pre-commit==4.3.0"]
doc = [
    "sphinx==8.2.3",
    "sybil==9.2.0",
    "furo==2025.9.25",
    "sphinx_design==0.6.1",
]

[project.urls]
Documentation = "https://python-vhs.readthedocs.io/en/stable/"
Issues = "https://github.com/taminomara/python-vhs/issues/"
Source = "https://github.com/taminomara/python-vhs/"
Changelog = "https://github.com/taminomara/python-vhs/blob/main/CHANGELOG.md"

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2", "wheel>=0.40"]

[tool.setuptools_scm]
write_to = "vhs/_version.py"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = ["--strict-markers", "-p no:doctest"]
testpaths = ["test", "vhs", "docs"]
markers = ["darwin", "linux", "win32"]

[tool.pyright]
include = ["sphinx_syntax"]
exclude = ["**/__pycache__"]
typeCheckingMode = "strict"
pythonVersion = "3.12"
pythonPlatform = "All"

reportMissingParameterType = "none"
reportUnknownParameterType = "none"
reportUnknownVariableType = "none"
reportUnknownMemberType = "none"
reportUnknownArgumentType = "none"
reportUnknownLambdaType = "none"
reportUnnecessaryIsInstance = "none"
reportUnnecessaryTypeIgnoreComment = "warning"

[tool.isort]
profile = "black"
skip_gitignore = true
